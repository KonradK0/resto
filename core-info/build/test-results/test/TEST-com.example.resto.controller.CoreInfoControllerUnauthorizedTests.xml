<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.resto.controller.CoreInfoControllerUnauthorizedTests" tests="4" skipped="0" failures="0" errors="0" timestamp="2021-10-25T18:17:42" hostname="KKOMP" time="0.132">
  <properties/>
  <testcase name="testFindByNameUnauthorized()" classname="com.example.resto.controller.CoreInfoControllerUnauthorizedTests" time="0.083"/>
  <testcase name="testFindByCuisineNameUnauthorized()" classname="com.example.resto.controller.CoreInfoControllerUnauthorizedTests" time="0.015"/>
  <testcase name="testFindRatingRangeBetween()" classname="com.example.resto.controller.CoreInfoControllerUnauthorizedTests" time="0.013"/>
  <testcase name="testFindPricingRangeBetweenUnauthorized()" classname="com.example.resto.controller.CoreInfoControllerUnauthorizedTests" time="0.013"/>
  <system-out><![CDATA[2021-10-25 20:17:42.963  INFO 15088 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.resto.controller.CoreInfoControllerUnauthorizedTests], using SpringBootContextLoader
2021-10-25 20:17:42.963  INFO 15088 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.example.resto.controller.CoreInfoControllerUnauthorizedTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-10-25 20:17:42.963  INFO 15088 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.example.resto.controller.CoreInfoControllerUnauthorizedTests]: CoreInfoControllerUnauthorizedTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-10-25 20:17:42.968  INFO 15088 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.example.resto.RestoApplication for test class com.example.resto.controller.CoreInfoControllerUnauthorizedTests
2021-10-25 20:17:42.973  INFO 15088 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2021-10-25 20:17:42.973  INFO 15088 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4f713b34, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@215f0af8, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7573eba2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c7f9e90, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2a11b0b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@734077c0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1984acf1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@91f2a4f, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@2e2c9fec, org.springframework.test.context.event.EventPublishingTestExecutionListener@5ea2139e, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@62fddf9f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@12c0dcdd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5859e296, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@162924e0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1a24109d, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@e961130, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@19cc0f26]

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/public/coreinfo/Restaurant_1
       Parameters = {current_ids=[1,2]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.resto.controller.CoreInfoController
           Method = com.example.resto.controller.CoreInfoController#findByName(Optional, String, String, Optional, HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 401
    Error message = 401 Unauthorized access
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/public/coreinfo/cuisine/italian
       Parameters = {current_ids=[1,2]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.resto.controller.CoreInfoController
           Method = com.example.resto.controller.CoreInfoController#findByCuisines_Name(Optional, String, String, Optional, HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 401
    Error message = 401 Unauthorized access
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/public/coreinfo/rating
       Parameters = {low=[1], high=[2], current_ids=[1,2]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.resto.controller.CoreInfoController
           Method = com.example.resto.controller.CoreInfoController#findRatingRangeBetween(Optional, String, int, int, Optional, HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 401
    Error message = 401 Unauthorized access
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/public/coreinfo/pricingrange
       Parameters = {low=[1], high=[2], current_ids=[1,2]}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.resto.controller.CoreInfoController
           Method = com.example.resto.controller.CoreInfoController#findPricingRangeBetween(Optional, String, int, int, Optional, HttpServletResponse)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 401
    Error message = 401 Unauthorized access
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
